# 配置名称: QuantumultX 配置
# 配置作者: Jahvlen
# 更新时间: 25-07-02 00:00


[general]

# 配置文件图标
;profile_img_url =http://www.example.com/example.png

# 👍👍👍资源解析器，自定义各类远程资源的转换，如节点，规则 filter，复写 rewrite 等，url 地址
resource_parser_url=https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/resource-parser.js
;resource_parser_url=resource-parser.js

# 直连网络测试
;network_check_url =http://bing.com

# 节点延迟测试，确认节点的可用性，可以在 server_local/remote 中，为节点、订阅单独指定server_check_url参数
;server_check_url =http://www.google.com/generate_204

# 指定服务器测试时所使用的 User-Agent
;server_check_user_agent = Agent/1.0

# 节点延迟测试超时
server_check_timeout = 5000

# 指定 DoH 请求所使用的 User-Agent
;doh_user_agent = Agent/1.0

# 👍👍节点地理位置展示
geo_location_checker=http://ip-api.com/json/?lang=zh-CN, https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/IP_API.js

# 👍👍👍运行模式模块，即根据网络自动切换 分流/直连/全局代理 等模式。rewrite/task 模块始终会生效，比 ssid 策略组设置简单，比 ssid-suspend 更灵活。
# 前两个 filter 先后表示 在 [数据蜂窝网络] 跟 [一般 Wi-Fi] 下，走 filter(分流)模式，后面则表示在 asus-5g 下切换为全局直连[all_direct]，asus 切换为全局代理[all_proxy]如需使用，相应 SSID 换成你自己 Wi-Fi 名即可
;running_mode_trigger=filter, filter, asus-5g:all_direct, asus:all_proxy

# 下面域名将不使用fake-ip方式. 其它域名则全部采用fake-ip及远程解析的模式
dns_exclusion_list = *.cmpassport.com, *.jegotrip.com.cn, *.icitymobile.mobi, id6.me

# 默认当DNS层面某domain被reject时，将返回loopback IP。你可以通过下面的参数修改成为 “no-error-no-answer”，或者 “nxdomain”
;dns_reject_domain_behavior = loopback

# 在特定Wi-Fi下暂停工作(仅task模块会继续工作)，多个Wi-Fi用“,”连接，增强兼容性模式
;ssid_suspended_list=Asus, Shawn-Wifi
;enhanced_compatibility_ssid_list = LINK_22E174, LINK_22E175

# UDP 白名单，留空则默认所有为端口，不在列表的端口将被丢弃（返回 ICMP “端口不可达” 信息）
# UDP Drop名单，同白名单类似，但不会返回 ICMP “端口不可达” 信息，drop 名单仅处理 whitelist名单中的端口
# 仅支持末端策略（末端策略为经由规则模块和策略模块后所命中的策略，例如：direct、reject 以及节点；不支持内置策略 proxy 以及其它自定义策略）
;udp_whitelist=53, 80-427, 444-65535
;udp_drop_list = 1900, 80
fallback_udp_policy=direct

# 下列表中的内容将不经过 QuantumultX的处理，设置后建议重启设备
;excluded_routes= 192.168.0.0/16, 172.16.0.0/12, 100.64.0.0/10, 10.0.0.0/8
;icmp_auto_reply=true


[dns]

# 上游 DNS 查询结果规避
# 1、当并发向多个上游 DNS 查询时，如响应最快的上游 DNS 抢答的结果命中了该条目，则 Quantumult X Tunnel DNS 模块会等待其他 DNS 服务器的响应结果（如抢答的结果中至少有一个不属于该条目，则不会等待其他 DNS 的响应，此时有效结果采用不属于该条目的所有记录）
# 2、如所有上游 DNS 返回的所有结果均命中该条目，则判定为 DNS 查询失败
# 3、如配置的上游 DNS 包含有去广告功能的 DNS 服务器，请勿使用该参数
;circumvent-ipv4-answer = 127.0.0.1, 0.0.0.0
;circumvent-ipv6-answer = ::

# 如需使用 DoH3，DNS over HTTP/3，请开启下面👇参数
;prefer-doh3

# 禁用系统 DNS 以及 ipv6
;no-system
no-ipv6

;指定 dns 服务器，并发响应选取最优结果
# 114 DNS - 老牌公共 DNS 服务，稳定性好，国内访问速度快
server=114.114.114.114
# 中国移动 DNS - 移动网络下解析速度优异，CDN 调度精准
server=202.141.176.93
# 中国移动 DNS - 移动网络备用服务器，提供冗余保障 
server=202.141.178.13
# 上海电信 DNS - 电信网络优化，华东地区表现突出
server=117.50.10.10
# 阿里云 DNS - 阿里巴巴公共 DNS，全国覆盖，抗污染能力强
server=223.5.5.5
# 腾讯 DNS - 腾讯公共 DNS，游戏和社交应用优化，显式指定53端口
server=119.29.29.29:53
# 腾讯 DNS - 腾讯备用服务器，与主服务器形成负载均衡
server=119.28.28.28
# Google DNS - 全球知名公共 DNS，稳定性高，全球覆盖 
;server = 8.8.8.8

;如指定 DoH 服务，则👆️上面的一般 dns 解析均失效 额外参数，在特定网络下禁用该 doh
;doh-server = https://dns.alidns.com/dns-query
;doh-server = https://exmaple1.com/dns-query, https://exmaple2.com/dns-query
;doh-server = https://223.6.6.6/dns-query, excluded_ssids=SSID1
;doh-server = https://223.5.5.5/dns-query, included_ssids=SSID2

;如指定了 DoQ 服务，则 DoH 以及其它 dns解析均失效
;doq-server = quic://dns.adguard.com
;doq-server = quic://dns1.example.com, quic://dns2.example.com
;doq-server = quic://dns.adguard.com, excluded_ssids=SSID1
;doq-server = quic://dns.adguard.com, included_ssids=SSID2

# 指定域名解析dns, 同样支持 excluded_ssids/included_ssids 参数
# 腾讯云 DNS
server=/*icloud.com/119.29.29.29
server=/*icloud.com.cn/119.29.29.29
server=/*tencent.com/119.29.29.29
server=/*weixin.com/119.29.29.29
;server = 8.8.8.8:53, excluded_ssids=SSID1
;server = 8.8.4.4:53, included_ssids=SSID2
;server = /example0.com/system
;server = /example1.com/8.8.4.4
;server = /*.example2.com/223.5.5.5
;doh-server = /*.example3.com/https://doh.pub/dns-query, excluded_ssids=SSID2
;doq-server = /*.example4.com/quic://dns.adguard.com, excluded_ssids=SSID3
;address = /example5.com/192.168.16.18
;address = /example6.com/[2001:8d3:8d3:8d3:8d3:8d3:8d3:8d3]
# 映射域名到其它域名的类型
;alias = /example7.com/another-example.com


[policy]

# img-url 参数用于指定策略组图标，可远程，也可本地/iCloud(Quantumult X/Images路径下) （108*108 大小）
# direct/proxy/reject 则只能用本地图标，名字分别为 direct.png, proxy.png,reject.png 放置于 Images 文件夹下即可生效 (108*108 大小)
static=ChatGPT, proxy, 美国, 英国, 新加坡, 日本, 台湾, 香港, direct, img-url=ChatGPT.png
static=Telegram, proxy, 美国, 英国, 新加坡, 日本, 台湾, 香港, direct, img-url=Telegram.png
static=🌏 国外网站, proxy, 美国, 英国, 新加坡, 日本, 台湾, 香港, direct, img-url=Global.png
static=🕹 终极清单, proxy, 美国, 英国, 新加坡, 日本, 台湾, 香港, direct, img-url=shoubing.png
static=美国, server-tag-regex=美国|🇺🇸|US|(?i)UnitedStates, img-url=United States.png
static=英国, server-tag-regex=英国|🇬🇧|UK|(?i)UnitedKingdom, img-url=United Kingdom.png
static=新加坡, server-tag-regex=新加坡|🇸🇬|SG|(?i)Singapore, img-url=Singapore.png
static=日本, server-tag-regex=日本|🇯🇵|JP|(?i)Japan, img-url=Japan.png
static=台湾, server-tag-regex=台湾|🇹🇼|TW|(?i)Taiwan, img-url=Taiwan.png
static=香港, server-tag-regex=香港|🇭🇰|HK|(?i)HongKong, img-url=Hong Kong.png
# 1，static：静态，手动选择节点/策略组。可以嵌套其它所有类型的策略组
# 2，available：可用，自动选择第一个可用的节点，当策略被触发且策略结果不可用时，将立即启动并发url延迟测试，只能套用节点
# 3，round-robin ：轮询策略，按网络请求轮流使用所有节点，只能套用节点
# 4，dest-hash：随机负载均衡，但相同域名走固定节点，只能直接套用节点
# 5，url-latency-benchmark：最低延迟，选取延迟最优节点（误区：延迟最低不一定速度最快），该类型的策略有一个名为 check-interval(秒) 的参数，如果此策略已经被任何请求激活，则将考虑该间隔。
# 6，ssid：将根据你所设定的网络来自动切换节点/策略组

# ssid策略组只能在配置文件写入；通常是在使用软路由时，让QX走直连，软路由接管代理。此时可以让去广告规则依旧保持reject，避免失效。
# 处于蜂窝数据时，走策略组1;
# 处于非Wi-Fi-1或Wi-Fi-2时，会走 策略组2 
# 处于⁠Wi-Fi-1或Wi-Fi-2时，走指定的策略，可以是 direct、proxy、reject 或 策略组，此处需至少有一个Wi-Fi参数。
; ssid = SSID, 策略组1, 策略组2, Wi-Fi-1:Proxy, Wi-Fi-2:direct


[server_remote]

# 可直接订阅SSR，SS链接，以及Quantumult X格式的vmess/trojan/https订阅，其它格式可用 opt-parser 开启解析器导入使用

# img-url参数用于指定图标，格式要求同样为 108*108 的 png 图片，可远程，可本地
# "tag" 表示 “标签”，"enabled" 表示“开启状态”, true 为开启，false 关闭.
# update-interval 为更新时间参数，单位 秒, 默认更新时间为 24*60*60=86400 秒，也就是24小时.
# opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器;

; 订阅链接

#支持本地/iCloud的节点文件/片段，位于Quantumult X/Profiles路径下
;servers.snippet, tag=本地服务器, enabled=false


[filter_remote]

#远程分流模块，可使用force-policy来强制使用策略偏好, 替换远程规则内所指定的策略组

# update-interval 为更新时间参数，单位 秒, 默认更新时间为 24*60*60=86400 秒，也就是24小时.
# opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器;

# 去广告
https://raw.githubusercontent.com/ConnersHua/RuleGo/master/Surge/Ruleset/Extra/Reject/Advertising.list, tag=🚦去广告, force-policy=reject, update-interval=86400, opt-parser=true, enabled=true
# 反劫持
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Hijacking/Hijacking.list, tag=🚫 运营商劫持, force-policy=reject, update-interval=172800, opt-parser=true, enabled=true
# Apple直连
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Apple/Apple.list, tag= Apple服务, force-policy=direct, update-interval=172800, opt-parser=false, enabled=true


# OpenAi
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/OpenAI/OpenAI.list, tag=💻 ChatGPT, force-policy=ChatGPT, update-interval=172800, opt-parser=false, enabled=true
# Telegram
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Telegram/Telegram.list, tag=Telegram, force-policy=Telegram, update-interval=172800, opt-parser=false, enabled=true
# 国外网站
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/Global/Global.list, tag=🌍 国外网站, force-policy=🌏 国外网站, update-interval=172800, opt-parser=false, enabled=true


# 国内IP池
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/ChinaIPs/ChinaIPs.list, tag=🇨🇳️ 国内IP池, force-policy=direct, update-interval=172800, opt-parser=false, enabled=true

# 默认
;FILTER_LAN, tag=LAN, force-policy=direct, enabled=true
FILTER_REGION, tag=CN, force-policy=direct, enabled=true

#支持本地/iCloud规则文件，位于Quantumult X/Profiles路径下
;filter.txt, tag=本地分流, enabled=false


[rewrite_remote]

#远程复写模块，内包含主机名hostname以及复写rewrite规则
# update-interval 为更新时间参数，单位 秒, 默认更新时间为 24*60*60=86400 秒，也就是24小时.
# opt-parser=true/false 用于控制是否对本订阅 开启资源解析器，不写或者 false 表示不启用解析器;
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/QuantumultX/AdvertisingLite/AdvertisingLite.conf, tag=去广告, update-interval=86400, opt-parser=false, enabled=true
https://raw.githubusercontent.com/ddgksf2013/Rewrite/master/AdBlock/YoutubeAds.conf, tag=Youtube去广告, update-interval=172800, opt-parser=true, enabled=true


#支持本地/iCloud的复写规则文件，位于Quantumult X/Profiles路径下
;rewrite.txt, tag=本地复写, opt-parser=false, enabled=false

[server_local]
# 以下示范都是 ip(域名):端口，
# 比如 vmess-a.203.167.55.4:777 ，实际是 203.167.55.4:777
# 前面的 ss-a，ws-tls这些，只是为了让你快速找到自己节点的类型
# 实际使用时，请不要真的 傻乎乎的 写 vmess-a.203.167.55.4:777 这种。
# 目前支持 shadowsocks/shadowsocksR/Vmess/Trojan/http(s)/Socks5 等类型
# 支持 tls-cert-sha256 以及 tls-pubkey-sha256 参数等自定义TLS验证

# shadowsocks以及shadowsocksR类型, 支持 V2-Plugin
# 支持UDP，支持UDP-OVER-TCP（版本1.0.29 665+）
;shadowsocks=ss-a.example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=Sample-A
;shadowsocks=ss-b.example.com:80, method=chacha20, password=pwd, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, tag=Sample-B
;shadowsocks=ss-c.example.com:443, method=chacha20, password=pwd, obfs=tls, obfs-host=bing.com, fast-open=false, udp-relay=false, tag=Sample-C
;shadowsocks=ssr-a.example.com:443, method=chacha20, password=pwd, ssr-protocol=auth_chain_b, ssr-protocol-param=def, obfs=tls1.2_ticket_fastauth, obfs-host=bing.com, tag=Sample-D
;shadowsocks=ws-a.example.com:80, method=aes-128-gcm, password=pwd, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=Sample-E
;shadowsocks=ws-b.example.com:80, method=aes-128-gcm, password=pwd, obfs=ws, fast-open=false, udp-relay=false, tag=Sample-F
;shadowsocks=ws-tls-a.example.com:443, method=aes-128-gcm, password=pwd, obfs=wss, obfs-uri=/ws, fast-open=false, udp-relay=false, tag=Sample-G
;shadowsocks=ws-tls-a.example.com:443, method=aes-128-gcm, password=pwd, udp-over-tcp=true fast-open=false, udp-relay=false, tag=Sample-H

# vmess 类型，ws，wss(ws+tls),over-tls,tcp，支持 UDP
# vmess 类型节点默认开启 aead，关闭请用 aead=false
; ws 类型
;vmess=ws-c.example.com:80, method=chacha20-ietf-poly1305, password= 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host=ws-c.example.com, obfs=ws, obfs-uri=/ws, fast-open=false, udp-relay=false, aead=false, tag=Sample-H
; wss(ws+tls) 类型
;vmess=ws-tls-b.example.com:443, method=chacha20-ietf-poly1305, password= 23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host=ws-tls-b.example.com, obfs=wss, obfs-uri=/ws, tls-verification=true,fast-open=false, udp-relay=false, tag=Sample-I
; http 类型
;vmess=example.com:80, method=chacha20-poly1305, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs=http, obfs-host=bing.com, obfs-uri=/resource/file, fast-open=false, udp-relay=false, server_check_url=http://www.apple.com/generate_204, tag=vmess-http
; tcp 类型
;vmess=vmess-a.example.com:80, method=aes-128-gcm, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, tag=Sample-J
;vmess=vmess-b.example.com:80, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, fast-open=false, udp-relay=false, tag=Sample-K
; over-tls 类型
;vmess=vmess-over-tls.example.com:443, method=none, password=23ad6b10-8d1a-40f7-8ad0-e3e35cd32291, obfs-host=vmess-over-tls.example.com, obfs=over-tls, tls-verification=true, fast-open=false, udp-relay=false, tag=Sample-L

# http(s) 类型
;http=http.example.com:80, username=name, password=pwd, fast-open=false, udp-relay=false, tag=http
;http=https.example.com:443, username=name, password=pwd, over-tls=true, tls-verification=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=http-tls

# socks5 类型节点
;socks5=example.com:80,fast-open=false, udp-relay=false, tag=socks5-01
;socks5=example.com:80, username=name, password=pwd, fast-open=false, udp-relay=false, tag=socks5-02
;socks5=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=socks5-tls-01
;socks5=example.com:443, username=name, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, tls-pubkey-sha256=eb5ec6684564fd0d04975903ed75342d1b9fdc2096ea54b4cf8caf4740f4ae25, fast-open=false, udp-relay=false, tag=socks5-tls-02

# trojan 类型, 支持 over-tls 以及 websockets，支持 UDP
;trojan=example.com:443, password=pwd, over-tls=true, tls-verification=true, fast-open=false, udp-relay=true, tag=trojan-tls-01
;trojan=example1.com:443, password=pwd, over-tls=true, tls-host=example.com, tls-verification=true, fast-open=false, udp-relay=false, tag=trojan-tls-02
;trojan=192.168.1.1:443, password=pwd, obfs=wss, obfs-host=example.com, obfs-uri=/path, udp-relay=true, tag=trojan-wss-05

[filter_local]
# 本地分流规则(对于完全相同的某条规则，本地的将优先生效)
# 如开启其他设置中的  “分流匹配优化” 选项，则匹配优先级为👇

# host > host-suffix > host-keyword(wildcard) > geoip = ip-cidr > user-agennt

# 完整域名匹配
;host, www.google.com, proxy
# 域名关键词匹配
;host-keyword, adsite, reject
# 域名后缀匹配
;host-suffix, googleapis.com, proxy
# 域名通配符匹配
;host-wildcard, *abc.com, proxy

# User-Agent 匹配
;user-agent, ?abc*, proxy


# 强制分流走蜂窝网络
;host-suffix, googleapis.com, proxy, force-cellular
# 让分流走蜂窝网络跟 Wi-Fi 中的优选结果
;host-suffix, googleapis.com, proxy, multi-interface
# 让分流走蜂窝网络跟 Wi-Fi 中的负载均衡，提供更大带宽出入接口
;host-suffix, googleapis.com, proxy, multi-interface-balance
# 指定分流走特定网络接口
;host-suffix, googleapis.com, proxy, via-interface=pdp_ip0

# %TUN% 参数，回传给 Quantumult X 接口，可用于曲线实现代理链功能
;host-suffix, example.com, ServerA, via-interface=%TUN%
;ip-cidr, ServerA's IP Range, ServerB
# DNS Leak
host-suffix,astrill.com,PROXY
host-suffix,dnsleaktest.com,PROXY
host-suffix,dnsleak.com,PROXY
host-suffix,expressvpn.com,PROXY
host-suffix,nordvpn.com,PROXY
host-suffix,surfshark.com,PROXY
host-suffix,ipleak.net,PROXY
host-suffix,perfect-privacy.com,PROXY
host-suffix,browserleaks.com,PROXY
host-suffix,browserleaks.org,PROXY
host-suffix,vpnunlimited.com,PROXY
host-suffix,whoer.net,PROXY
host-suffix,whrq.net,PROXY
# 屏蔽ios更新
host,mesu.apple.com,reject
host,gdmf.apple.com,reject
host,updates-http.cdn-apple.com,reject
# ip 规则
ip-cidr, 10.0.0.0/8, direct
ip-cidr, 127.0.0.0/8, direct
ip-cidr, 172.16.0.0/12, direct
ip-cidr, 192.168.0.0/16, direct
ip-cidr, 224.0.0.0/24, direct
# ipv6 规则
;ip6-cidr, 2001:4860:4860::8888/32, direct
# 已采用 ip 池数据，因此注释掉 geoip cn
;geoip, netflix, proxy

# 1.0.28 build628 后支持如下的geoip库写法（需 GEO-IP 库支持）
;geoip, netflix, proxy

#不在上述规则中(远程以及本地)的剩余请求，将走final 指定的节点/策略，这里即是 → 🕹 终极清单, 请根据自己的需求来选择直连或节点、策略
#此为必需规则，仅可修改对应策略组，请勿删除 final
final, 🕹 终极清单


[rewrite_local]
#本地复写规则

#谷歌重定向
^https?:\/\/(www.)?(g|google)\.cn url 302 https://www.google.com
^https?:\/\/(ditu|maps).google\.cn url 302 https://maps.google.com


[task_local]
# 包含3⃣️种类型: cron 定时任务，UI交互脚本，网络切换脚本

# 1⃣️ 任务模块，可用于签到,天气话费查询等
# js文件放于iCloud或者本机的Quantumult X/Scripts 路径下。TF版本可直接使用远程js链接
# 从 “分” 开始的5位cron 写法，具体 cron 表达式可自行 Google
# 比如上述语句 代表每天 12 点 2 分，自动执行一次;
# tag参数为 task 命名标识;
;img-url参数用于指定 task 的图标(108*108)

2 12 * * * sample.js, tag=本地示范(左滑编辑，右滑执行), enabled=false, img-url=https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png
13 12 * * * https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-task.js, tag=远程示范(点击缓存/更新脚本), enabled=false, img-url=https://raw.githubusercontent.com/crossutility/Quantumult-X/master/quantumult-x.png

# 2⃣️ UI交互查询脚本示范，在首页长按 节点/策略组 唤出
event-interaction https://raw.githubusercontent.com/KOP-XIAO/QuantumultX/master/Scripts/streaming-ui-check.js, tag = 流媒体 - 解锁查询, img-url=checkmark.seal.system, enabled=true

# 3⃣️ 网络切换/变化时 触发的脚本类型
;event-network sample-taks.js


[http_backend]
#
# Deploy a local HTTP server and use JavaScript for data processing.
# If the require-devices is set, this line of configuration will only be loaded when current Quantumult device ID belongs to the require-devices. The Quantumult device ID can be found in "Settings - Misc Settings - About".
# The input variables are $reqeust.url, $reqeust.path, $reqeust.headers, $reqeust.body
# The output using $done like $done({status:"HTTP/1.1 200 OK"}, headers:{}, body:"here is a string") to sendback the response.
# Further more you can use a signature or any other validation method to verify if the request is legitimate.
# After the deployment you should visit it through http://127.0.0.1:9999/your-path/your-api/.
#

;https://raw.githubusercontent.com/crossutility/Quantumult-X/master/sample-backend.js, tag=fileConverter, path=^/example/v1/
;preference.js, tag=userPreference, path=^/preference/v1/, img-url=https://example.com, enabled=true
;sample.js, tag=sample, path=^/sample/v1/, require-devices=ID1, ID2, enabled=true
;convert.js, tag=fileConverter, path=^/convert/v1/


[mitm]
#以下为证书&主机名部分

# 请自行在 APP 的UI中 生成证书 并安装&信任（💡请按确保照文字提示操作💡）
# 以下为证书参数，可去UI界面自行生成并安装证书，会在此生成对应信息
;passphrase = 
;p12 = 

# 跳过验证证书
;skip_validating_cert = false
# 强制SNI域名
;force_sni_domain_name = false

# 当使用 Quantumult X 在 M 芯片的 Mac 设备上作为局域网网关时，使用下面的参数来 跳过某些特定设备的 mitm 需求
;skip_src_ip = 192.168.4.50, 92.168.4.51

# 当多个不同的 TCP 连接（非域名类请求）的目标 IP 不同，但这些连接的 TSL 握手 SNI 字段相同时，如需跳过其中某些连接的 MitM hostname 匹配过程，可使用👇参数。
;skip_dst_ip = 123.44.55.4

;hostname 为主机名，用,分隔多个
;hostname = *.example.com, *.sample.com
hostname = www.google.cn